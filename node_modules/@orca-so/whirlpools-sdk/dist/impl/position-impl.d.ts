import { TransactionBuilder } from "@orca-so/common-sdk";
import { Address } from "@project-serum/anchor";
import { WhirlpoolContext } from "../context";
import { IncreaseLiquidityInput, DecreaseLiquidityInput } from "../instructions";
import { PositionData } from "../types/public";
import { Position } from "../whirlpool-client";
import { PublicKey } from "@solana/web3.js";
import { AccountFetcher } from "../network/public";
export declare class PositionImpl implements Position {
    readonly ctx: WhirlpoolContext;
    readonly fetcher: AccountFetcher;
    readonly address: PublicKey;
    private data;
    constructor(ctx: WhirlpoolContext, fetcher: AccountFetcher, address: PublicKey, data: PositionData);
    getAddress(): PublicKey;
    getData(): PositionData;
    refreshData(): Promise<PositionData>;
    increaseLiquidity(liquidityInput: IncreaseLiquidityInput, resolveATA?: boolean, sourceWallet?: Address, positionWallet?: Address, ataPayer?: Address): Promise<TransactionBuilder>;
    decreaseLiquidity(liquidityInput: DecreaseLiquidityInput, resolveATA?: boolean, sourceWallet?: Address, positionWallet?: Address, ataPayer?: Address): Promise<TransactionBuilder>;
    private refresh;
}
